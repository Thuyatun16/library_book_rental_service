// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  output          = "../generated/prisma"
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role{
  ADMIN
  TEACHER
  STUDENT
}
enum RentalStatus{
  RENTED
  RETURNED
}
model User {
  id        String      @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role     Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rentals   Rental[]
}
model Book{
  id        String      @id @default(uuid())
  title     String
  author    String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rentals   Rental[]
}
model Rental{
  id        String      @id @default(uuid())
  userId    String
  bookId    String
  status    RentalStatus
  rentedAt  DateTime @default(now())
  returnedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])
}

model RentalSnapshot {
  id           String   @id @default(uuid())
  bookId       String
  userId       String
  rentedAt     DateTime
  availability Int
  createdAt    DateTime @default(now())
}

